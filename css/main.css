/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
@import url('https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900');
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}
/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}
/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block;
}
/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}
/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block;
}
/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px;
}
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}
/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}
/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}
/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}
/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}
/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}
/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}
/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}
/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block;
}
/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}
/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}
/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}
/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}
/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}
/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}
/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}
/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}
/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}
/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}
/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}
/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}
/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}
/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}
/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}
/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block;
}
/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}
/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block;
}
/**
 * Add the correct display in IE.
 */
template {
  display: none;
}
/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none;
}
/* # Setup devices width */
/* # Variables for mobile first approach and strict ranges */
.cat {
  display: inline-block;
  width: 30rem;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  padding: 1.5rem;
  font-size: 1.5rem;
  text-align: left;
  vertical-align: top;
  border-radius: 1rem;
}
.cat:hover {
  -webkit-box-shadow: 0 0 1rem #800;
          box-shadow: 0 0 1rem #800;
}
.cat__img-w {
  position: relative;
  margin-bottom: 1rem;
  height: 30rem;
}
.cat__img {
  position: absolute;
  left: 50%;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
  bottom: 0;
  max-width: 100%;
  max-height: 100%;
}
.cat__name {
  height: 2rem;
  margin-bottom: .5rem;
  font-size: 2rem;
  line-height: 1;
  font-weight: 500;
}
.cat__name-link {
  position: relative;
  z-index: 1;
  display: block;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
  text-decoration: none;
  color: #000;
  background-color: #fff;
}
.cat__name-link:hover {
  white-space: normal;
}
.cat__category {
  margin: 0 .1rem .75rem;
  font-size: 1rem;
}
.cat__desc {
  text-align: justify;
}
.rating {
  margin-bottom: .75rem;
  font-size: 0;
  direction: rtl;
}
.rating__label {
  position: relative;
  display: inline-block;
  width: 1.5rem;
  height: 3rem;
  padding-left: .25rem;
  -webkit-transition: fill .15s;
  transition: fill .15s;
  fill: #fff;
  overflow: hidden;
  cursor: pointer;
}
.rating__label:nth-of-type(odd) {
  -webkit-transform: scale(-1, 1);
          transform: scale(-1, 1);
}
.rating__label::before {
  content: '';
  position: absolute;
  left: 5%;
  display: block;
  width: 200%;
  height: 100%;
  background: #F00;
  border-radius: 50%;
}
.rating__label > svg {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  right: -0.1rem;
  max-width: 80%;
  max-height: 80%;
}
.rating__radio {
  display: none;
}
.rating__label:hover svg,
.rating__label:hover ~ .rating__label svg,
.rating__radio:checked ~ .rating__label {
  fill: #800;
}
*,
h1 {
  margin: 0;
  padding: 0;
}
html {
  font-size: 10px;
}
body {
  font-family: Roboto, sans-serif;
}
.clear {
  clear: both;
}
.header {
  margin: 5rem 0;
}
.header__title {
  font-size: 5rem;
  text-align: center;
}
.header__mrrr {
  color: #800;
}
.main {
  max-width: 120rem;
  margin: 0 auto;
  font-size: 0;
}
.main__switch-radio {
  display: none;
}
.main__switch-radio:checked + .main__switch-label {
  fill: #800;
}
.main__switch-radio_list:checked ~ .cats .cat {
  display: block;
  width: 100%;
}
.main__switch-radio_list:checked ~ .cats .cat__img-w {
  display: inline-block;
  width: 20%;
  max-height: 30rem;
  margin: 0 10% 0 0;
}
.main__switch-radio_list:checked ~ .cats .cat__img {
  -webkit-transform: none;
          transform: none;
  position: static;
  display: block;
  width: auto;
}
.main__switch-radio_list:checked ~ .cats .cat__info {
  display: inline-block;
  width: 35%;
  margin: 1rem 5% 0 0;
  vertical-align: top;
}
.main__switch-radio_list:checked ~ .cats .cat__desc {
  display: inline-block;
  width: 28%;
  margin: 1rem 1% 0 0;
  vertical-align: top;
}
.main__switch-label {
  float: right;
  display: block;
  width: 2.5rem;
  height: 2.5rem;
  margin-left: 1rem;
  fill: #F00;
  cursor: pointer;
}
.main__switch-label svg {
  width: 100%;
  height: 100%;
}
.main__switch-label:hover {
  fill: #800;
}
.main__hr {
  margin-bottom: 2rem;
  border: 0.1rem solid #800;
}
.price {
  margin-bottom: .75rem;
}
.price__curr {
  color: #F00;
  font-size: 2.5rem;
  font-weight: 700;
}
.price__old {
  text-decoration: line-through;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
